<UserControl x:Class="PlayerControls.Themes.FramePresenter"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:components="clr-namespace:PlayerControls.Themes._components"
             xmlns:frameItems="clr-namespace:PlayerControls.Interfaces.presentation.FrameItems"
             mc:Ignorable="d"
             d:DesignHeight="300" d:DesignWidth="300" x:Name="Uc" ClipToBounds="True">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/CsWpfBase;component/Themes/Standard.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <FontFamily x:Key="DefaultFont">Yu Gothic UI Light</FontFamily>
            <components:String_To_Uri x:Key="StringToUri" />

            <components:FrameItemTemplateSelector x:Key="{x:Type components:FrameItemTemplateSelector}" />

            <DataTemplate DataType="{x:Type frameItems:IFrameVideo}" x:Key="{x:Type frameItems:IFrameVideo}">
                <components:FrameItemContainer>
                    <MediaElement LoadedBehavior="Manual" UnloadedBehavior="Manual" Source="{Binding Path=FrameItemVideoFilePath, Converter={StaticResource StringToUri}}" ScrubbingEnabled="True" MediaFailed="MediaElement_OnMediaFailed" Unloaded="MediaElement_Unloaded" />
                </components:FrameItemContainer>
            </DataTemplate>
            <DataTemplate DataType="{x:Type frameItems:IFrameImage}" x:Key="{x:Type frameItems:IFrameImage}">
                <components:FrameItemContainer>
                    <Image Source="{Binding Path=FrameItemImage, IsAsync=True}" ImageFailed="Image_OnImageFailed" />
                </components:FrameItemContainer>
            </DataTemplate>
            <DataTemplate DataType="{x:Type frameItems:IFrameText}" x:Key="{x:Type frameItems:IFrameText}">
                <components:FrameItemContainer>
                    <Viewbox>
                        <TextBlock Text="{Binding Path=FrameItemText}"
                                   FontWeight="{Binding Path=FrameItemFontWeight}" FontStyle="{Binding Path=FrameItemFontStyle}"
                                   Foreground="{Binding Path=FrameItemForeground, Converter={StaticResource GConv-ColorToSolidColorBrush}}"
                                   FontFamily="{Binding Path=FrameItemFontFamily, TargetNullValue={StaticResource DefaultFont}, Mode=OneWay}" />
                    </Viewbox>
                </components:FrameItemContainer>
            </DataTemplate>
            <DataTemplate DataType="{x:Type frameItems:IFrame}" x:Key="{x:Type frameItems:IFrame}">
                <components:FrameItemContainer HasFixedRatio="{Binding Path=FrameHasFixedRatio}" RatioX="{Binding Path=FrameRatioX}"
                                               RatioY="{Binding Path=FrameRatioY}">
                    <ItemsControl ItemsSource="{Binding Path=FrameChildren}"
                                  ItemTemplateSelector="{StaticResource {x:Type components:FrameItemTemplateSelector}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Panel.ZIndex" Value="{Binding Path=FrameItemZIndex}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </components:FrameItemContainer>

            </DataTemplate>
            <DataTemplate DataType="{x:Type frameItems:IFrame}" x:Key="FixedRatioFrameTemplate">
                <components:FrameItemContainer HasFixedRatio="{Binding Path=FrameHasFixedRatio}" RatioX="{Binding Path=FrameRatioX}"
                                               RatioY="{Binding Path=FrameRatioY}">
                    <ItemsControl ItemsSource="{Binding Path=FrameChildren}"
                                  ItemTemplateSelector="{StaticResource {x:Type components:FrameItemTemplateSelector}}">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <Grid />
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.ItemContainerStyle>
                            <Style TargetType="ContentPresenter">
                                <Setter Property="Panel.ZIndex" Value="{Binding Path=FrameItemZIndex}" />
                            </Style>
                        </ItemsControl.ItemContainerStyle>
                    </ItemsControl>
                </components:FrameItemContainer>
            </DataTemplate>
        </ResourceDictionary>
    </UserControl.Resources>
    <ContentControl x:Name="PagePresenter" Content="{Binding ElementName=Uc, Path=Item}"
                    ContentTemplateSelector="{StaticResource {x:Type components:FrameItemTemplateSelector}}" />
</UserControl>